# include:
#   - project: 'infra/pipeline'
#     file: '/.gitlab-ci.yml'

.base_tests: &base_tests
  script:
    - type multiwerf && source <(multiwerf use ${WERF_VERSION})
    - werf version
    - type werf && source <(werf ci-env gitlab --tagging-strategy tag-or-branch --verbose)
    - set -x
    - werf deploy
      --stages-storage :local
      --kube-context ${KUBE_CONTEXT:-k8s}
      --env ${CI_ENVIRONMENT_CUSTOM_SLUG:-${CI_ENVIRONMENT_SLUG}}
      --set "global.context=${KUBE_CONTEXT:-k8s}"
      --set "global.dc=${DC:-primary}"
      --set "global.cluster=${CLUSTER:-dc1}"
      --set "global.test_mode=${TEST_MODE:-full}"
  dependencies:
    - Build
  tags:
    - werf

stages:
  - build
  - deploy
  - qa
  - dev
  - staging
  - production
  - cleanup

Build:
  stage: build
  script:
    - type multiwerf && source <(multiwerf use ${WERF_VERSION})
    - werf version
    - type werf && source <(werf ci-env gitlab --tagging-strategy tag-or-branch --verbose)
    - werf build-and-publish
      --stages-storage :local
  tags:
    - werf
  except:
    - schedules

Run full tests on test:
  <<: *base_tests
  stage: qa
  environment:
    name: test
  variables:
    KUBE_CONTEXT: k8s
  except:
    - schedules
  only:
    - tags
  when: manual

Run full tests on stage:
  <<: *base_tests
  stage: qa
  environment:
    name: staging
  variables:
    KUBE_CONTEXT: k8s
    TEST_MODE: simple
  except:
    - schedules
  only:
    - tags
  when: manual

# Run simple tests on test:
#   <<: *base_tests
#   stage: qa
#   environment:
#     name: test
#   variables:
#     KUBE_CONTEXT: k8s
#   except:
#     - schedules
#   only:
#     - tags
#   when: manual

# Run simple tests on stage:
#   <<: *base_tests
#   stage: qa
#   environment:
#     name: staging
#   variables:
#     KUBE_CONTEXT: k8s
#     TEST_MODE: simple
#   except:
#     - schedules
#   only:
#     - tags
#   when: manual

# Run tests on production:
#   <<: *production_deploy
#   stage: qa
#   environment:
#     name: production
#   except:
#     - schedules
#   only:
#     - tags
#   when: manual